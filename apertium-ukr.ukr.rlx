DELIMITERS = "<.>" "<!>" "<?>" ; 
SOFT-DELIMITERS = "<,>" ;

# =========================================================================== #

LIST BOS = (>>>) ; 
LIST EOS = (<<<) ;

# Tags

LIST N = n ;
LIST Prop = np ;
LIST A = adj ;
LIST Pr = pr ;
LIST Det = det ;
LIST Interj = ij ;
LIST Interr = ij ;
LIST Adv = adv ;
LIST Num = num ;
LIST CC = cnjcoo ;
LIST CS = cnjsub ;
LIST Pron = prn;
LIST V = vblex vbser vbmod vaux  ;

LIST Nom = nom ;
LIST Gen = gen ;
LIST Dat = dat ;
LIST Acc = acc ;
LIST Ins = ins ;
LIST Loc = loc ;
LIST Voc = voc ;

LIST Sg = sg ;
LIST Pl = pl ;

LIST Fem = f ;
LIST Masc = m ;
LIST Neu = nt ; 

LIST Sg3 = (p3 sg);

LIST Past = past ;
LIST Pres = pres ;
LIST Fut = fut ;

LIST CASE = nom gen dat acc ins loc voc ;

LIST GENDER = m f nt mf mfn ;
LIST NUMBER = sg pl sp ;
LIST ANIMAC = aa nn an ;

LIST ADV-NEG = "ніде" ;

LIST BUTI = "бути";

LIST V-FIN = pres past fut imp ;
#SET V-FIN = Pres | Past | Fut ; 
LIST V-FIN-PAST = Past ; 

SET Pers = (p1) | (p2) | (p3) ;

SET NounMascFem = (n m) OR (n f) OR (n mfn) ;
SET NounMascNeu = (n m) OR (n nt) OR (n mfn) ;
SET NounFemNeu = (n f) OR (n nt) OR (n mfn) ;

SET NOM-OR-GEN = Nom | Gen ; 
SET NOM-OR-ACC = Nom | Acc ;
SET ACC-OR-GEN = Acc | Gen ;

SET NOTMSC = Fem | Neu ;
SET NOTFEM = Masc | Neu ;
SET NOTNEU = Masc | Fem | (mf) ;

SET NOTNOM = Gen | Dat | Acc | Ins | Loc | Voc ;
SET NOTGEN = Nom | Dat | Acc | Ins | Loc | Voc ;
SET NOTDAT = Nom | Gen | Acc | Ins | Loc | Voc ;
SET NOTACC = Nom | Gen | Dat | Ins | Loc | Voc ;
SET NOTINS = Nom | Gen | Dat | Acc | Loc | Voc ;
SET NOTLOC = Nom | Gen | Dat | Acc | Ins | Voc ;
SET NOTVOC = Nom | Gen | Dat | Acc | Ins | Loc ;

SET NOTACCINS = Nom | Gen | Dat | Loc | Voc ; 
SET NOTNOMACC = Ins | Gen | Dat | Loc | Voc ; 
SET NOTNOMGEN = Ins | Acc | Dat | Loc | Voc ; 
SET NOTNOMVOC = Gen | Dat | Acc | Ins | Loc ; 

SET OBL    = CASE - Nom ;

LIST DemPron = (prn dem) ;
LIST PosPron = (prn pos) ;
LIST IndPron = (prn ind) ;

# Boundary sets 

SET WORD = N | V | A | Pr | Pron | Det | Adv | CC | CS | Interj | Num | ("\?") ;

LIST Nomen = top al ant cog n np prn adj det; # Words that have gender, number and case

SET PRE-N =  A | Det | Num | (n gen) | (prn gen) | CC ; # Det???

SET Modifier = A | Det | Num ; # Words that agree in case, number, gender with the following word.
    # (differs from PRE-N in that it always agrees with the headword)
    # | DemPron | PosPron | IndPron removed

LIST COMMA = (",") (cm) ;

LIST CMSEMIC = "," ";" ;
SET MARK =  COMMA | ("\\") | ("\;") ; #"

SET WORDMARK = WORD | MARK ;

SET NPNH = WORDMARK - PRE-N ;
SET NPNHA = WORDMARK - PRE-N - Adv ;
SET NOT-ADV = WORDMARK - Adv ;

SET NP-MEMBER = PRE-N | N | Pron ;

SET NP-HEAD = N | Pron | Prop ;

SET S-BOUNDARY = CS | Interr | (";") ;

LIST VERB-DAT = "казати"i "відповідати"i "купувати"i "посміхатися"i "ходити"i ; # TODO: complete the list; "ходити" - CHECK

# =========================================================================== #

SECTION

REMOVE CS IF (0 ("что")) (NOT -1 COMMA) (NOT -1 BOS) ;
    ## Вот что говорят об этом исторические архивы. 

SELECT CS IF (0 ("что")) (-1 COMMA) ;
    ## Практика показывает, что для её решения уже недостаточно существующих физических теорий.

REMOVE Det + $$CASE IF (NOT 1* $$CASE BARRIER N) ;
    ## вона дивиться у вікно і бачить Іванка та Марічку, що бавляться.
    ## она смотрит в окно и видит Ваню и Машу, что играют.

SELECT Gen IF (0* ("бути"i) + (neg) BARRIER BOS | EOS | CMSEMIC)
              (NOT 0* V-FIN BARRIER BOS | EOS | CMSEMIC) ;
    ## Вона заглядає під стіл і під крісла, але Іванка ніде немає.
    ## Она заглядывает под стол и под стулья, но Вани нигде нет.

# Preposition based case disambiguation:
REMOVE:Case Pr + $$CASE IF (1C Nomen - $$CASE)
REMOVE:Case Nomen + $$CASE IF (-1C Pr - $$CASE)
# Modifier based case, number disambiguation:
REMOVE:Case Nomen + $$CASE IF (-1C Modifier - $$CASE)
REMOVE:Number Nomen + $$NUMBER IF (-1C Modifier - $$NUMBER)
    ## в садку. у садку. у вікно. в хату. навпроти великого будинку. на своє питання
REMOVE:Case Pr + $$CASE IF (1C Modifier - $$CASE)   # CHECK

REMOVE:Locative Nomen + Loc IF (0 Dat OR Loc) (NOT -1 Pr + Loc) (NOT -1C Modifier + Loc);

#SELECT Gen IF (-1* ("всередині") | ("навпроти") BARRIER NOTGEN) ;
    ## вони завжди бавляться у садку навпроти великого будинку.
    ## они всегда играют в саду напротив большого дома.

REMOVE:Dative Dat IF (NOT 0* VERB-DAT) ;
    ## А ви знаєте чому? Чому вона це робить?

SELECT Sg3 IF (0 BUTI) (-1 Pron + Gen LINK -1 ("у"));
    ## У нас є дуже чітка мета – це дбати за особливі місця для усіх.

SELECT ("рік") IF (0 ("рок") OR ("рік")) ;
    ## 2015 року Національному фонду виповниться 120 років.